#!/bin/sh
set -euf

## Program Tracking ##

program_command="ssid-powerful"
program_version="1.1.2"
program_updated="2017-11-01"
program_license="GPL"
program_contact="Joel Parker Henderson (joel@joelparkerhenderson.com)"
program_variant="$program_command version $program_version updated $program_updated"

help(){
cat << EOF
ssid-powerful: Is an SSID powerful enough to do what you want?

Syntax:

    ssid-powerful [options] <ssid>

Example:

    ssid-powerful "My Demo WiFi" && echo "yes" || echo "no"

You can decide what the word powerful means to you.

For example we use these:

  * Do we know the WiFi is free?
  * Do we know the WiFi is fast?
  * Do we know the WiFi is secure?


## Setup

To set up the configuration directory and data file:

    ssid-powerful --init

The configuration directory goes here by default:

    ~/.config/ssid-powerful/data.txt

The configuration file is plain text. You can edit it as you like.


## Usage

To add an item i.e. insert an item in the data file:

    ssid-powerful --add "foo"

To drop an item i.e. delete an item from the data file:

    ssid-powerful --drop "foo"

To query an item i.e. ask if the item is in the data file:

    ssid-powerful --query "foo"


## Options

Option paramters:

  * -i --init: initialize the configuration
  * -a --add <ssid>: append an item into the data file
  * -d --drop <ssid>: delete an item from the data file
  * -q --query <ssid>: ask if an item is in the data file
  * -h --help: print help text
  * -v --version: print version number
  * -V --variant: print the program name, version number, updated date.


## Tracking

  * Command: $program_command
  * Version: $program_version
  * Updated: $program_updated
  * License: $program_license
  * Contact: $program_contact
EOF
}

## Helpers
out() { printf %s\\n "$*" ; }; export -f out
err() { >&2 printf %s\\n "$*" ; }; export -f err
die() { >&2 printf %s\\n "$*" ; exit 1 ; }; export -f die

## Directory helpers
cfg_dir() { out "${XDG_CONFIG_HOME:-$HOME/.config/$program_command}" ; }; export -f cfg_dir;
cfg_dat() { out "$(cfg_dir)/data.txt" ; }; export -f cfg_dat;
tmp_dir() { out $(mktemp -d -t $program_command); }; export -f tmp_dir;

init(){
    test -e "$(cfg_dir)" || mkdir -p "$(cfg_dir)"
    test -e "$(cfg_dat)" || touch -- "$(cfg_dat)"
}

query(){
  grep -qFxm1 "$1" "$(cfg_dat)"
}

add(){
  grep -qFxm1 "$1" "$(cfg_dat)" || printf %s\\n "$1" >> "$(cfg_dat)"
}

drop(){
  tmp="$(tmp_dir)/tmp"
  grep -Fxv "$1" "$(cfg_dat)" > "$tmp" && mv "$tmp" "$(cfg_dat)"
}

### Initialize ###
if [ $# == 0 ]; then help; exit 0; fi
case "$1" in
    -i|--init)
        init
        ;;
    -c|--config)
        config
        ;;
    -a|--add)
        add "$2"
        ;;
    -d|--drop)
        drop "$2"
        ;;
    -q|--query)
        query "$2"
        ;;
    --help)
        help
        ;;
    -v|--version)
        out $program_version
        ;;
    -V|--variant)
        out $program_variant
        ;;
    *)
        query "$1"
        ;;
esac
